pages:
  image: node
  before_script:
    - pwd
  script:
    - cd public-website
    - npm --version
    - date
    - yarn install
    - date
    - yarn run generate
    - date
    - du -sh public/
    - mv public ../public
    - ls -a
    - pwd
    - cd ..
    - ls -a
    - pwd
  artifacts:
    paths:
      - public


test:mypages:
  image: trion/ng-cli-karma
  script:
    - cd public-website
    - pwd 
    - ls -a
    - npm install
    - ./node_modules/@angular/cli/bin/ng test --progress false --watch=false
    - ./node_modules/@angular/cli/bin/ng e2e --progress false --watch=false

build:dotnetcore:
  image: microsoft/dotnet:latest
  script:
    - pwd
    - cd Windows
    - cd ClassLibrary1
    - pwd
    - dotnet --version
    - dotnet restore --verbosity detailed
    - dotnet build --verbosity detailed

test:dotnetcore:
   image: microsoft/dotnet:latest
   script:
     - pwd
     - cd Windows
     - cd XUnitTestProject1
     - dotnet restore --verbosity detailed
     - dotnet test --verbosity detailed

test:databases:
  image: postgres
  services:
    - postgres

  variables:
    # Configure postgres service (https://hub.docker.com/_/postgres/)
    POSTGRES_DB: custom_db
    POSTGRES_USER: custom_user
    POSTGRES_PASSWORD: custom_pass
    image: postgres
  script:
    - cd public-databases
    - pwd
    - ls -a 
    # official way to provide password to psql: http://www.postgresql.org/docs/9.3/static/libpq-envars.html
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f create_tables.sql
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f insert_data.sql
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f query_data.sql

test:rawlinsdb:
  image: postgres
  services:
    - postgres

  variables:
    # Configure postgres service (https://hub.docker.com/_/postgres/)
    POSTGRES_DB: rawlins
    POSTGRES_USER: rawlins
    POSTGRES_PASSWORD: rawlins
    image: postgres
  script:
    - cd experimental/python/rawlins/db
    - pwd
    - ls -a 
    # official way to provide password to psql: http://www.postgresql.org/docs/9.3/static/libpq-envars.html
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f create_tables.sql
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f insert_data.sql
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f query_data.sql

test:rawlinsunittest:
  image: python:stretch
  services:
    - postgres

  variables:
    # Configure postgres service (https://hub.docker.com/_/postgres/)
    POSTGRES_DB: rawlins
    POSTGRES_USER: rawlins
    POSTGRES_PASSWORD: rawlins
    image: postgres
  script:
    - cd experimental/python/rawlins
    - pwd
    - ls -a 
    - pip install --upgrade pip setuptools
    - pip install --user pipenv
    - export PATH="$HOME/.local/bin:$PATH"
    - pipenv install
    - pipenv run python -m unittest discover

test:hobackunittest:
  image: python:stretch
  script:
    - cd experimental/python/hoback
    - pwd
    - ls -a
    - pip install --upgrade pip setuptools
    - pip install --user pipenv
    - export PATH="$HOME/.local/bin:$PATH"
    - pipenv install
    - pipenv run pytest
